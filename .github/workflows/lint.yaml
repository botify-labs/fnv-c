name: lint

on:
  push:
  release:
  pull_request:

jobs:

  lint_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event. Selected python version is ${{ matrix.python-version }}."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Deps install
        run: |
          pip install -r dev-requirements.txt
      - name: Install develop
        run: |
          python3 setup.py develop
      - name: Run lint
        run: |
          invoke lint --no-fix
      - name: Run tests
        run: |
          invoke test 
      - name: Make API docs
        if: matrix.python-version == '3.7'
        run: |
          invoke apidoc
      - name: Upload API doc as an artifact
        if: matrix.python-version == '3.7'
        uses: actions/upload-artifact@v3
        with:
          name: apidoc
          path: apihtml/

  githubpages:
    runs-on: ubuntu-latest
    needs: lint_and_test
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Download API doc artifact
        uses: actions/download-artifact@v3
        with:
          name: apidoc
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  pypi:
    runs-on: ubuntu-latest
    needs: lint_and_test
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Deps install
        run: |
          pip install -r dev-requirements.txt
      - name: Bump version
        run: |
          invoke bump-version
      - name: Build sdist
        run: |
          python setup.py sdist
      - name: Upload to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          twine upload dist/*
